{"version":3,"sources":["utils/token-config.js","components/Nav/Nav.js","components/payFormTwo/helper.js","components/payFormTwo/helper2.js","utils/API.js","components/tokenizer/tokenizer.js","components/paymentInputs/paymentInputs.js","components/payFormTwo/payFormTwo.js","components/footer/footer.js","pages/Pay/Pay.js","components/reportForm/reportForm.js","components/modal/Modal.js","pages/Report/Report.js","components/configForm/configForm.js","components/footerTwo/footerTwo.js","pages/Config/Config.js","App.js","serviceWorker.js","index.js"],"names":["CSAPI","require","create","baseURL","timeout","headers","data","responseType","module","exports","Heading","props","state","collapse","isWideEnough","onClick","bind","this","setState","color","fixed","dark","expand","href","isOpen","navbar","right","to","Component","DisplayFormikState","style","margin","background","fontSize","padding","JSON","stringify","DisplayResponse","console","log","axios","put","then","result","status","statusText","get","cardNum","reqBody","post","retRef","Tokenizer","value","token","handleChange","handleBlur","event","target","preventDefault","API","error","type","onChange","onBlur","PaymentInputs","usePaymentInputs","meta","wrapperProps","getCardImageProps","getCardNumberProps","getExpiryDateProps","getCVCProps","initialValues","cardNumber","expiryDate","cvc","onSubmit","validate","errors","erroredInputs","handleSubmit","images","name","field","PayFormTwo","amount","email","account","expiry","cvv","postal","values","setSubmitting","lastRes","catch","setTimeout","validationSchema","Yup","shape","required","min","max","length","touched","dirty","isSubmitting","handleReset","md","size","order","htmlFor","display","id","placeholder","className","disabled","authResp","FooterPage","Date","getFullYear","Pay","ReportForm","selectedRowState","resp","columns","cols","defaultPageSize","minRows","filterable","getTdProps","rowInfo","column","instance","e","handleOriginal","row","retref","ModalExample","buttonLabel","useState","modal","setModal","toggle","Report","Header","Cell","Modal","initialModalState","width","accessor","Fragment","ConfigForm","form","for","FooterTwo","position","bottom","Config","class","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd93f238.chunk.js","sourcesContent":["const axios = require('axios');\nconst CSAPI = axios.create({\n    baseURL: \"https://fts-uat.cardconnect.com/cardsecure/api/v1/ccn/\",\n    timeout: 3200,\n    headers: {'Content-Type': 'application/json'},\n    data: {},\n    responseType: 'json',\n  });\n\nmodule.exports = CSAPI","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarNav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"mdbreact\";\n\nexport default class Heading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      isWideEnough: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"indigo\" fixed=\"top\" dark expand=\"md\">\n          <NavbarBrand href=\"/home\">\n            <strong>cardconnect.app</strong>\n          </NavbarBrand>\n          {!this.state.isWideEnough && <NavbarToggler onClick={this.onClick} />}\n          <Collapse isOpen={this.state.collapse} navbar>\n            <NavbarNav right>\n              <NavItem>\n                <NavLink to=\"/pay/\">Pay</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/report/\">Report</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/config/\">Config</NavLink>\n              </NavItem>\n            </NavbarNav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport const DisplayFormikState = props =>\n  <div \n    style={{ margin: '1rem 0' }}>\n    <pre\n      style={{\n        background: '#f6f8fa',\n        fontSize: '.65rem',\n        padding: '.5rem',\n      }}\n    >\n        <strong>Form Props</strong> ={' '}\n        {JSON.stringify(props, null, 2)}\n    </pre>\n  </div>;\n\n\n","import React from 'react';\n\nexport const DisplayResponse = props =>\n  <div \n    style={{ margin: '1rem 0' }}>\n    <pre\n      style={{\n        background: '#f6f8fa',\n        fontSize: '.65rem',\n        padding: '.5rem',\n      }}\n    >\n        <strong>Response</strong> ={' '}\n        {JSON.stringify(props,null, 2)}\n    </pre>\n  </div>;","import axios from 'axios';\nimport CSAPI from '../utils/token-config';\n// import config from './config'\n\nexport default  {\n    \n    testConnect: function(data) {\n        return axios.get('/api/test', data);\n\n    },\n\n    runAuth: function(data) {\n        console.log(data);\n        return axios.put('/api/auth/', data)\n        .then(result => {\n            console.log(result.status + \" || \" + result.statusText );\n            return result;\n        });\n    },\n\n    getReport: function () {\n        return axios.get('/api/report/')\n        .then(result => {\n            console.log(result)\n            return result;\n        })\n    },\n\n    tokenize: function(cardNum) {\n        console.log('tokenizing: ' + cardNum);\n        let reqBody = {\n            \"account\": cardNum\n        };\n        return CSAPI.post('/tokenize', reqBody)\n        .then(result => {\n            console.log(result.data);\n            return result;\n        })\n    },\n\n    void: function(retRef) {\n        console.log('voiding: ' + retRef);\n        return axios.put('/api/void/', retRef)\n        .then(result => {\n            console.log(result.status + \" || \" + result.statusText );\n            return result;\n        });\n    }\n}\n\n// module.exports = service","import React, { Component } from \"react\";\nimport API from '../../utils/API'\n\nexport default class Tokenizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            token: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        \n    }\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    // validateCard(value) {\n    //     // Accept only digits, dashes or spaces\n    //       if (/[^0-9-\\s]+/.test(value)) return false;\n      \n    //       // The Luhn Algorithm. It's so pretty.\n    //       let nCheck = 0, bEven = false;\n    //       value = value.replace(/\\D/g, \"\");\n      \n    //       for (var n = value.length - 1; n >= 0; n--) {\n    //           var cDigit = value.charAt(n),\n    //                 nDigit = parseInt(cDigit, 10);\n      \n    //           if (bEven && (nDigit *= 2) > 9) nDigit -= 9;\n      \n    //           nCheck += nDigit;\n    //           bEven = !bEven;\n    //       }\n    //       console.log(nCheck);\n    //       return (nCheck % 10) === 0;\n    //   }\n\n\n    handleBlur(event) {\n        event.preventDefault();\n        try {\n        let cardNum = this.state.value;\n            API.tokenize(cardNum)\n            .then(result => {\n            this.setState({ token: result.data.token })\n            return;\n        });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\nrender() {\n    return (\n        <form>\n            <label>\n                Card Number:\n            <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange}\n                onBlur={this.handleBlur}\n                />\n            </label>\n            <br></br>\n            <label>\n                Token: <span>{this.state.token}</span>\n            </label>\n        </form>\n    );\n}\n  }\n\n\n/*\n export default function CreditCardForm() {\n    const [values, setValues] = React.useState({\n      name: \"\",\n      number: \"\",\n      expiration: \"\",\n      cvc: \"\"\n    });\n    const handleChange = React.useCallback(\n      event => {\n        const { name, value } = event.target;\n        setValues(v => ({ ...v, [name]: value }));\n      },\n      [setValues]\n    );\n\n    const [focused, setFocus] = React.useState<FOCUS_TYPE | undefined>(undefined);\n    const handleFocus = React.useCallback(\n      event => setFocus(event.target.name as FOCUS_TYPE),\n      [setFocus]\n    );\n    const handleBlur = React.useCallback(() => setFocus(undefined), [setFocus]);\n    */","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport { PaymentInputsWrapper, usePaymentInputs } from 'react-payment-inputs';\nimport images from 'react-payment-inputs/images';\n\n\nexport default function PaymentInputs() {\n    const {\n      meta,\n      wrapperProps,\n      getCardImageProps,\n      getCardNumberProps,\n      getExpiryDateProps,\n      getCVCProps\n    } = usePaymentInputs();\n  \n    // return (\n    //   <PaymentInputsWrapper {...wrapperProps}>\n    //     <svg {...getCardImageProps({ images })} />\n    //     <input {...getCardNumberProps()} />\n    //     <input {...getExpiryDateProps()} />\n    //     <input {...getCVCProps()} />\n    //   </PaymentInputsWrapper>\n    // );\n    return (\n        <Formik\n          initialValues={{\n            cardNumber: '',\n            expiryDate: '',\n            cvc: ''\n          }}\n          onSubmit={data => \n            console.log(data)}\n          validate={() => {\n            let errors = {};\n            if (meta.erroredInputs.cardNumber) {\n              errors.cardNumber = meta.erroredInputs.cardNumber;\n            }\n            if (meta.erroredInputs.expiryDate) {\n              errors.expiryDate = meta.erroredInputs.expiryDate;\n            }\n            if (meta.erroredInputs.cvc) {\n              errors.cvc = meta.erroredInputs.cvc;\n            }\n            return errors;\n          }}\n        >\n          {({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <div>\n                <PaymentInputsWrapper {...wrapperProps}>\n                  <svg {...getCardImageProps({ images })} />\n                  <Field name=\"cardNumber\">\n                    {({ field }) => (\n                      <input {...getCardNumberProps({ onBlur: field.onBlur, onChange: field.onChange })} />\n                    )}\n                  </Field>\n                  <Field name=\"expiryDate\">\n                    {({ field }) => (\n                      <input {...getExpiryDateProps({ onBlur: field.onBlur, onChange: field.onChange })} />\n                    )}\n                  </Field>\n                  <Field name=\"cvc\">\n                    {({ field }) => <input {...getCVCProps({ onBlur: field.onBlur, onChange: field.onChange })} />}\n                  </Field>\n                </PaymentInputsWrapper>\n              </div>\n              <br/>\n                <button type=\"submit\">\n                Submit\n                </button>\n            </form>\n          )}\n        </Formik>\n      );\n  }","import React, { Component } from \"react\";\nimport { DisplayFormikState } from \"./helper\";\nimport { DisplayResponse } from \"./helper2\";\nimport { \n  Formik, \n  Field, \n  ErrorMessage, \n  //getIn \n} \n  from 'formik';\n// import Panel from '../panel';\nimport * as Yup from 'yup';\nimport API from '../../utils/API';\nimport { Container, Row, Col } from 'reactstrap';\nimport Tokenizer from \"../../components/tokenizer\";\nimport PaymentInputs from \"../../components/paymentInputs\";\n\n\nexport default class PayFormTwo extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Formik\n            initialValues={{ amount: '1.00', name: 'kevin', email: 'k@n.com', account: '4444333322221111', expiry: '0823', cvv: '123', postal: '55555' }}\n            onSubmit={(values, { setSubmitting }) => {\n              API.runAuth(values)\n                .then(result => {\n                  // setState(state: any, callback?: () => void): void\n                  this.setState(\n                    {\n                      lastRes: result.data\n                    },\n                    () => {\n                      console.log(this.state);\n                      console.log(\"in callback\")\n                    }\n                  )\n                })\n                .catch(error => {\n                  console.log(error);\n                  throw error;\n                })\n              setTimeout(() => {\n                // alert(\"Click ok to confirm details.\\n\" + JSON.stringify(values, null, 2));\n                setSubmitting(false);\n              }, 200);\n            }}\n            validationSchema={Yup.object().shape({\n              amount: Yup.string()\n                .required('Enter dollar amount'),\n              name: Yup.string()\n                .required('Name is Required'),\n              email: Yup.string()\n                .email()\n                .required('Email is Required'),\n              account: Yup.string()\n                .min(15)\n                .max(16)\n                .required('Enter Credit Card Number'),\n              expiry: Yup.string()\n                .length(4)\n                .required('Enter Expiration Date MMYY'),\n              cvv: Yup.string()\n                .min(3)\n                .max(4)\n                .required('Enter CVV'),\n              postal: Yup.string()\n                .length(5)\n                .required('Enter Zip Code')\n            })}\n          >\n            {props => {\n              const {\n                values,\n                touched,\n                errors,\n                dirty,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                handleReset,\n              } = props;\n              return (\n                <Row>\n                  \n                  <Col md={{ size: 6, order: 1 }}>\n                    <h5>Input Form</h5>\n                    <br></br>\n                    <PaymentInputs\n\n                    />\n                    <form onSubmit={handleSubmit}>\n                    \n                      {/* <Field component=\"select\" name=\"Month\">\n                  <option value=\"January\">Red</option>\n                  <option value=\"February\">Green</option>\n                  <option value=\"blue\">Blue</option>\n                </Field> */}\n                <br />\n                <br />\n                      <label htmlFor=\"amount\" style={{ display: 'float' }}>\n                        Amount:  \n                      </label>\n                      <Field\n                        id=\"amount\"\n                        placeholder=\"99.99\"\n                        type=\"text\"\n                        value={values.amount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                          errors.amount && touched.amount ? 'text-input error' : 'text-input'\n                        }\n                      />\n                      <ErrorMessage name=\"amount\" />\n                      <br />\n\n                      <label htmlFor=\"email\" style={{ display: 'float' }}>\n                        Email:\n                </label>\n                      <Field\n                        id=\"email\"\n                        placeholder=\"Enter your email\"\n                        type=\"text\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                          errors.email && touched.email ? 'text-input error' : 'text-input'\n                        }\n                      />\n                      <ErrorMessage name=\"email\" />\n\n                      <br />\n                      <label htmlFor=\"name\" style={{ display: 'float' }}>\n                        Name:\n                </label>\n                      <Field\n                        id=\"name\"\n                        placeholder=\"First and Last Name\"\n                        type=\"text\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                          errors.name && touched.name ? 'text-input error' : 'text-input'\n                        }\n                      />\n                      <ErrorMessage name=\"name\" />\n                      <br />\n                      <label htmlFor=\"account\" style={{ display: 'float' }}>\n                        Card Number:\n                </label>\n                      <Field\n                        id=\"account\"\n                        placeholder=\"4444333322221111\"\n                        type=\"text\"\n                        value={values.account}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                          errors.account && touched.account ? 'text-input error' : 'text-input'\n                        }\n                      />\n                      <ErrorMessage name=\"account\" />\n                      <br />\n                      <label htmlFor=\"expiry\" style={{ display: 'float' }}>\n                        Expiration Date:\n                </label>\n                      <Field\n                        id=\"expiry\"\n                        placeholder=\"MMYY\"\n                        type=\"text\"\n                        value={values.expiry}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                          errors.expiry && touched.expiry ? 'text-input error' : 'text-input'\n                        }\n                      />\n                      <ErrorMessage name=\"expiry\" />\n                      <br />\n                      <label htmlFor=\"cvv\" style={{ display: 'float' }}>\n                        CVV:\n                </label>\n                      <Field\n                        id=\"cvv\"\n                        placeholder=\"123\"\n                        type=\"text\"\n                        value={values.cvv}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                          errors.cvv && touched.cvv ? 'text-input error' : 'text-input'\n                        }\n                      />\n                      <ErrorMessage name=\"cvv\" />\n                      <br />\n                      <label htmlFor=\"postal\" style={{ display: 'float' }}>\n                        Zip Code:\n                </label>\n                      <Field\n                        id=\"postal\"\n                        placeholder=\"55555\"\n                        type=\"text\"\n                        value={values.postal}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                          errors.postal && touched.postal ? 'text-input error' : 'text-input'\n                        }\n                      />\n                      <ErrorMessage name=\"postal\" />\n                      <br />\n                      <br />\n                      <button\n                        type=\"button\"\n                        className=\"outline\"\n                        onClick={handleReset}\n                        disabled={!dirty || isSubmitting}\n                      >\n                        Reset\n                   </button>\n                      <button type=\"submit\" disabled={isSubmitting}>\n                        Submit\n                </button>\n                      {/* <DisplayFormikState {...props} /> */}\n                    </form>\n                  </Col>\n                  <Col md={{ size: 6, order: 2 }}>\n                  <h5>Form State</h5>\n                    <DisplayFormikState {...props} />\n                  </Col>\n                  <Col md={{ size: 6, order: 3 }}>\n                    <h5>Auth Response</h5>\n                    <DisplayResponse\n                      authResp={(this.state)}\n                    />\n                </Col>\n                <Col md={{ size: 6, order: 4 }}>\n\n                    <h5>Table</h5>   \n                    <Tokenizer />\n                    \n                </Col>\n                </Row>\n\n              );\n            }}\n          </Formik>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Footer, } from \"mdbreact\";\n\nexport default class FooterPage extends Component {\n  render() {\n    return (\n      <Footer color=\"indigo\">\n        <div className=\"text-center py-3\">\n          <Container>\n            &copy; {new Date().getFullYear()} Copyright:{\" \"}\n            <a href=\"/home/\">ReactPay</a>\n          </Container>\n        </div>\n      </Footer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Heading from \"../../components/Nav/Nav\";\nimport PayFormTwo from \"../../components/payFormTwo\";\nimport Footer from \"../../components/footer\";\n// import Tokenizer from \"../../components/tokenizer\";\n// import Col from 'react-bootstrap/Col';\n\n\nclass Pay extends Component {\n\n  render() {\n    return (\n      <>\n        <Heading />\n        <br />\n        <br />\n        <br />\n\n\n        <div className=\"container\">\n          <PayFormTwo/>\n        </div>\n        <div>\n          <Footer/>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Pay;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css';\nimport API from \"../../utils/API\";\n\n\nclass ReportForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedRowState: null\n    };    \n}\n  render() {\n    return (\n      <div>\n      <ReactTable\n        data={this.props.resp}\n        columns={this.props.cols}\n        defaultPageSize={15}\n        minRows={3}\n        filterable={false}\n        getTdProps={(state, rowInfo, column, instance) => {\n          return {\n            onClick: (e, handleOriginal) => {\n              // console.log('it produced this event:', e)\n              // console.log('It was in this column:', column)\n              // console.log('It was in this table instance:', instance)\n              console.log('A row was clicked:', rowInfo.row.retref);\n              // working with the below State\n              this.state.selectedRowState = rowInfo.row.retref;\n              if (handleOriginal) {\n                handleOriginal()\n              }\n            }\n          }\n        }\n      }\n      />\n      </div>\n    );\n  }\n}\n\nexport default ReportForm;","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ModalExample = (props) => {\n  const {\n    buttonLabel,\n    className,\n    retRef\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button color=\"primary\" onClick={toggle}>{buttonLabel}Manage</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>{retRef}</ModalHeader>\n        <ModalBody>\n          Transaction Details go here\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggle}>Void/Refund</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ModalExample;","import React, { Component, useState } from \"react\";\nimport Heading from \"../../components/Nav/Nav\";\nimport ReportForm from \"../../components/reportForm\";\nimport FooterPage from \"../../components/footer\";\nimport API from \"../../utils/API\";\nimport ModalExample from \"../../components/modal\";\n\n\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n    // function getCurrentRow(rowInfo) {\n    //   console.log(\"got current Row\" + rowInfo);\n    //   this.props.currentRow = rowInfo;\n    // };\n\n    function ManageModal({ \n      // data, \n      // columnProps: { rest: { showModal } } \n    }) {\n      return <ModalExample \n      initialModalState={false}\n      // retRef={this.getTdProps}\n      />\n    }\n    this.state = {\n      columns: [\n      {\n        Header: 'Action',\n        Cell: ManageModal,\n        width: 115\n      },\n      {\n        Header: 'RetRef',\n        accessor: 'retref',\n        width: 135\n      },\n      {\n        Header: 'GUID',\n        accessor: '_id'\n      },\n      {\n        Header: 'createdAt',\n        accessor: 'createdAt'\n      },\n      {\n        Header: 'Amount',\n        accessor: 'amount'\n      },\n      {\n        Header: 'RespText',\n        accessor: 'resptext'\n      },\n      {\n        Header: 'CommCard',\n        accessor: 'commcard'\n      },\n      {\n        Header: 'CvvResp',\n        accessor:'cvvresp'\n      },\n      {\n        Header: 'AvsResp',\n        accessor: 'avsresp'\n      },\n      {\n        Header: 'RespCode',\n        accessor: 'respcode'\n      },\n      {\n        Header: 'EntryMode',\n        accessor: 'entrymode'\n      },\n      {\n        Header: 'MerchId',\n        accessor: 'merchid'\n      },\n      {\n        Header: 'Token',\n        accessor: 'token'\n      },\n      {\n        Header: 'AuthCode',\n        accessor: 'authcode'\n      },\n      {\n        Header: 'Processor',\n        accessor: 'respproc'\n      },\n      {\n        Header: 'BinType',\n        accessor: 'bintype'\n      },\n      {\n        Header: 'RespStat',\n        accessor: 'respstat'\n      },\n      {\n        Header: 'Account',\n        accessor: 'account'\n      }],\n      data: []\n    };\n  }\n  \ncomponentDidMount() { \n  //call API put result in state\n  // console.log(\"component did mount!\");\n  API.getReport()\n  .then(result => {\n    this.setState({\n      data: result.data},() => \n        console.log(this.state.data))\n  })\n  .catch(error => {\n    console.log(error);\n    throw error;\n  })\n}\n\nvoidActivity() {\n\n  API.void()\n  .then(result => {\n\n  })\n\n}\n\n  render() {\n    // const report = this.props.report;\n    return (\n      <React.Fragment>\n        <Heading />\n        <br />\n        <br />\n        <br />\n        <div className=\"container\">\n          <ReportForm \n            resp={this.state.data}\n            cols={this.state.columns}\n            // currentRow={this.getCurrentRow}\n          />\n          \n        </div>\n        <div>\n          <FooterPage />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Report;\n","import React, {Component} from \"react\";\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Label,\n    Input, \n    Button\n  } from \"reactstrap\";\n\n  export default class ConfigForm extends Component {\n    render() {\n      return (\n        <div>\n          <br />\n          <br />\n          <h5><strong>Configuration</strong></h5>\n          <hr />\n          <Row form>\n            <Col md={4}>\n              <FormGroup>\n                <Label for=\"site\">Site</Label>\n                <Input\n                  type=\"text\"\n                  name=\"site\"\n                  id=\"Site\"\n                  placeholder=\"Site Name\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md={4}>\n              <FormGroup>\n                <Label for=\"auth\">Auth</Label>\n                <Input\n                  type=\"text\"\n                  name=\"auth\"\n                  id=\"Auth\"\n                  placeholder=\"Authorization\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md={4}>\n              <FormGroup>\n                <Label for=\"mid\">MID</Label>\n                <Input\n                  type=\"test\"\n                  name=\"mid\"\n                  id=\"Mid\"\n                  placeholder=\"Merchant\"\n                />\n              </FormGroup>\n            </Col>\n            <Button color=\"grey\">Cancel</Button>\n            <Button color=\"indigo\">Save</Button>\n          </Row>\n        </div>\n      );\n    }\n  }","import React, { Component } from \"react\";\nimport { Container, Footer, } from \"mdbreact\";\n\nexport default class FooterTwo extends Component {\nrender() {\nreturn (\n<Footer color=\"indigo\" style={{ position: \"absolute\", width: \"100%\", bottom: \"0\" }}>\n  <div className=\"text-center py-3\">\n    <Container>\n      &copy; {new Date().getFullYear()} cardconnect.app {\" \"}\n      <a href=\"/Pay/\">Pay</a>\n    </Container>\n  </div>\n</Footer>\n);\n}\n}","// eslint-disable-next-line\nimport React, { Component, Fragment } from \"react\";\nimport Heading from \"../../components/Nav/Nav\";\nimport ConfigForm from \"../../components/configForm\";\nimport FooterTwo from \"../../components/footerTwo\";\n\nclass Config extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Heading />\n        <br />\n        <div class=\"container\">\n          <ConfigForm />\n        </div>\n        <div>\n          <FooterTwo />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Config;\n","import React, { Component } from \"react\";\n// eslint-disable-next-line\n// import ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Pay from \"./pages/Pay\";\nimport Report from \"./pages/Report\";\nimport Config from \"./pages/Config\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Pay} />\n            <Route path=\"/Pay\" component={Pay} />\n            <Route path=\"/Report\" component={Report} />\n            <Route path=\"/Config\" component={Config} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}